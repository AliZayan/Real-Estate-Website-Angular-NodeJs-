const util = require('util');
const operators = require('./operator.json');

const buildCondition = function(){
    
    let stringArray = [];

    for ( const key in this._conditions ){
        if ( typeof this._conditions[key] == "object") {
            for ( const innerKey in this._conditions[key]){
                const value = this._conditions[key][innerKey];
                const from = this.name;
                if ( value ){
                    const operator = operators[innerKey];
                    if ( operator )
                        stringArray.push(util.format(`%s%s %s "%s"`, from, key, operator, value ));
                };
            };
        } else {
            const from = key.indexOf(".") > -1? "": this.name + "."; 
            if (this._conditions[key])
                stringArray.push(`${from}${key}="${this._conditions[key]}"`);
        };
    };
        
    return stringArray.join(' AND ');
};

function buildSort(){
    let sortArray = [];
    
    for ( const field in this._sort ){
        const from = field.indexOf(".") > -1? "": this.name + "."; 
        sortArray.push(`${from}${field} ${this._sort[field]<0?'DESC': ''}`);
    }
        
    return sortArray.join(', ');
};

function buildJoin(){
    let joins = [];
    if ( !this._join ) return "";
    for ( const join of this._join )
        joins.push(`${join.type} ${join.table} ON ${this.name}.${join.primaryKey} = ${join.table}.${join.foreignKey}`);
    return joins.join(' ');
};

module.exports = { 
    buildCondition: buildCondition,
    buildSort: buildSort,
    buildJoin: buildJoin
};