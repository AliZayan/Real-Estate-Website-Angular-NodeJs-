const Mysql = require('mysql'),
      util = require('util'),
      EventEmitter = require('events');

function Connection( config, options={} ){

    EventEmitter.call(this);

    this.config = config;
    this.options = options;

    this.mysql = Mysql.createConnection({
        host : config.host,
        user : config.user,
        password : config.password,
        database : config.database
    });

    this.handleError( config, options );

    this.mysql.connect( error => {
        if ( error )
            return this.emit("error", error );
        return this.emit("connected");
    });
    
};

Connection.prototype.reconnect = function(){

    const config = this.config,
          options = this.options;

    this.mysql = Mysql.createConnection({
        host : config.host,
        user : config.user,
        password : config.password,
        database : config.database
    });

    this.handleError( config, options );

    return new Promise((resolve, reject ) => {
        this.mysql.connect( error => {
            if ( error ){
                this.emit("error", error );
                return reject(error);
            } else {
                this.emit("reconnected");
                return resolve();
            };
        });    
    });
};

Connection.prototype.handleError = function(config, options){
    this.mysql.on('error', error => {
        this.emit( error, error );
        if ( options.autoReconnect && error.code !== 'PROTOCOL_CONNECTION_LOST')
            this.reconnect();
    });
};

util.inherits( Connection, EventEmitter );

module.exports = Connection;